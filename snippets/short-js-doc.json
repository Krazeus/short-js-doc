{
	"at": {
		"prefix": "at",
		"body": [
			"/*!",
			" * @author ${1:user} <${2:email}>",
			" * date ${3:month}/${4:day}/${5:year}",
			" * ${6:description}",
			" */"
		],
		"description": "Author Information"
	},
	"ed": {
		"prefix": "ed",
		"body": [
			"/**",
			" * @class ${1:name}",
			" * @extends ${2:extend}",
			" * @alternateClassName ${3:alternateName} ",
			" * @xtype ${4:xtype}",
			" * ${5:description}",
			" */",
			"Ext.define('${1:name}', {",
			"  extend: '${2:extend}',",
			"  alternateClassName: '${3:alternateName}',",
			"  xtype: '${4:xtype}',",
			"  ${6://}requires: [${7}],",
			"  initComponent: function (){",
			"    var ${8:me} = this,",
			"      ${9:Ex} = Ext;",
			"",
			"    ${9:Ex}.apply(${8:me}, {",
			"      items: [${10:args:}]",
			"    });",
			"    ${8:me}.callParent(${11:arguments});",
			"  }",
			"});"
		],
		"description": "Ext JS Class Definition"
	},
	"pt": {
		"prefix": "pt",
		"body": [
			"@${1:mode} {${2:type}} ${3:name}  `${4:default}` ${5:description}"
		],
		"description": "Property Tag"
	},
	"pd": {
		"prefix": "pd",
		"body": [
			"/*",
			" * @${1:cfg} {${2:type}} ${3:name}  `${4:default}` ${5:description}",
			" */",
			"${3:name}${6::} ${4:null}${7:,}"
		],
		"description": "Property definition"
	},
	"pp": {
		"prefix": "pp",
		"body": [
			"${1:property}${2::} ${3:null}${4:,}"
		],
		"description": "Property"
	},
	"ep": {
		"prefix": "ep",
		"body": [
			"${1:property}${2::} ${3}${4:property} ${5:,}"
		],
		"description": "Equal name property and value"
	},
	"sp": {
		"prefix": "sp",
		"body": [
			"${1:property}${2::} '${3:value}'${4:,}"
		],
		"description": "String property"
	},
	"gp": {
		"prefix": "gp",
		"body": [
			"${1:property}${2::} ${3:model}.${4:get}('${5:dataIndex}')${6:,}"
		],
		"description": "Get Property"
	},
	"bp": {
		"prefix": "bp",
		"body": [
			"${1:property}: '{${2:value}}'${3:,}"
		],
		"description": "Bind property"
	},
	"bc": {
		"prefix": "bc",
		"body": [
			"${1:bind}:{",
			"  ${2:property}:'{${3:value}}'${4:,}",
			"}${5:,}"
		],
		"description": "Bind configuration"
	},
	"ap": {
		"prefix": "ap",
		"body": [
			"${1:name}${2::} [${3}]${4:,}"
		],
		"description": "Array property"
	},
	"op": {
		"prefix": "op",
		"body": [
			"${1:name}${2::} {",
			"  ${3:${4:property}: ${5:''}${6:,}}",
			"}${7:,}"
		],
		"description": "Object property"
	},
	"ct": {
		"prefix": "ct",
		"body": [
			"@${1:private} ${2:args}"
		],
		"description": "Context Tag"
	},
	"cd": {
		"prefix": "cd",
		"body": [
			"//<debug>",
			"${1}",
			"console.${2:log}('${3:debug}', ${4:arguments});",
			"//</debug>"
		],
		"description": "console debug block"
	},
	"cc": {
		"prefix": "cc",
		"body": [
			"/**",
			" * ${1}",
			" */"
		],
		"description": "Comment code"
	},
	"uf": {
		"prefix": "uf",
		"body": [
			" /**",
			"  * @${1:private}",
			"  */",
			"update${2:Property} ${3::} function (new${2:Property}, old${2:Property}) {",
			"  ${4}",
			"}${3:,}"
		],
		"description": "update function property"
	},
	"sg": {
		"prefix": "sg",
		"body": [
			"/**",
			" * @param {${1:type}} ${2:name}  `${3:default}` ${4:description} ",
			" * @${5:public}",
			" */",
			"set${6:Property}${7::} function (${2:name}) {",
			"  var old${2:name} = this.${2:name};",
			"  if (${2:name} !== old${2:name}) {",
			"    ${8}",
			"    this.${2:name} = ${2:name};",
			"    //this.update${6:Property}(${2:name}, old${2:name});",
			"  }",
			"}${10:,}",
			"/**",
			" * @returns {${1:type}} ${2:name} `${3:default}` ${4:description} ",
			" * @${5:public}",
			" */",
			"get${6:Property}${7::} function () {",
			"  var ${2:name} = this.${2:name} || ${3:default};",
			"  ${9}",
			"  return ${2:name};",
			"}${10:,}"
		],
		"description": "set and get property"
	},
	"cv": {
		"prefix": "cv",
		"body": [
			"var ${1:me} = this,",
			"  ${2:view} = ${1:me}.getView(),",
			"  ${3:model} = ${1:me}.getViewModel(),",
			"  ${4:refs} = ${1:me}.getReferences()${5:;}"
		],
		"description": "Control variables"
	},
	"xl": {
		"prefix": "xl",
		"body": [
			"${Ext}.log({",
			"  msg: '${message:debug}',",
			"  level: '${type:warn}',",
			"  dump: ${arguments},",
			"  stack: ${false}",
			"});"
		],
		"description": "Ext log"
	},
	"fp": {
		"prefix": "fp",
		"body": [
			"/**",
			" * ${1:name} ${2:description}",
			" * @${3:private}",
			" */",
			"${1:name}${4::} function (${5}) {",
			"  ${6}",
			"}${7:,}"
		],
		"description": "Function Property"
	},
	"mp": {
		"prefix": "mp",
		"body": [
			"/**",
			" * @method ${1:name} ${2:description}",
			" * @returns {${3:type}} ${4:property} `${5:default}` ${6:description}",
			" * @${7:private}",
			" */",
			" ${1:name}${9::} function (${10}) {",
			"  var ${4:property} = ${5:null};",
			"  ${13}",
			"  return ${4:property};",
			"}${15:,}"
		],
		"description": "Method Property"
	},
	"ew": {
		"prefix": "ew",
		"body": [
			"Ext.${widget}('${xtype}'${1:,{${0}}});"
		],
		"description": "Ext Widget"
	},
	"cf": {
		"prefix": "cf",
		"body": [
			"${1:function}(${2});"
		],
		"description": "call function"
	},
	"aop": {
		"prefix": "aop",
		"body": [
			"${1:object}[${2:'${3:property}'}];"
		],
		"description": "Access object property"
	},
	"td": {
		"prefix": "td",
		"body": [
			"/**",
			" * @todo ${1:description}",
			" */"
		],
		"description": "Todo Tag"
	},
	"gt": {
		"prefix": "gt",
		"body": [
			"/**",
			" * @${1:tag} ${2} ",
			" */"
		],
		"description": "Generic Tag"
	},
	"vt": {
		"prefix": "vt",
		"body": [
			"/**",
			" * @version ${1:major}${2:minor}${2:patch} ",
			" */"
		],
		"description": "Version Tag"
	},
	"dt": {
		"prefix": "dt",
		"body": [
			"/**",
			" * @deprecated   ${1} ",
			" */"
		],
		"description": "Deprecated Tag"
	},
	"crt": {
		"prefix": "crt",
		"body": [
			"/**",
			" * @copyright  ${1:name} ${2:year} ",
			" * ${3} ",
			" */"
		],
		"description": "Copyright Tag"
	}
}