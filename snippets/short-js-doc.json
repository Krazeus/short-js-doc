{
	/*
	* @author MYAX <mig_dj@hotmail.com>
	* @date 7/8/16
	* @description javascript documentations - jsduck sintaxis
	*/
	"at": {
		"prefix": "at",
		"body": [
			"/**",
			" * @author ${user} <${email}>",
			" * date ${month}/${day}/${year}",
			" * ${description}",
			" */"
		],
		"description": "Author Information"
	},
	"ed": {
		"prefix": "ed",
		"body": [
			"/**",
			" * @class ${name}",
			" * @extends ${extend}",
			" * @alternateClassName ${alternateName} ",
			" * @xtype ${xtype}",
			" * ${description}",
			" */",
			"Ext.define('${name}', {",
			"  extend: '${extend}',",
			"  alternateClassName: '${alternateName}',",
			"  xtype: '${xtype}',",
			"  //requires: [${1}],",
			"  initComponent: function (){",
			"    var ${me} = this,",
			"      ${Ex} = Ext;",
			"",
			"    ${Ex}.apply(${me}, {",
			"    items: [${args:}]",
			"    });",
			"    ${me}.callParent(${arguments});",
			"  }",
			"});"
		],
		"description": "Ext JS - Class Definition"
	},
	"pt": {
		"prefix": "pt",
		"body": [
			"@${1:mode} {${2:String}} ${3:name}  `${4:default}` ${5:description}"
		],
		"description": "Property Tag"
	},
	"pd": {
		"prefix": "pd",
		"body": [
			"/*",
			" * @${mode:cfg} {${type:String}} ${name}  `${default}` ${description}",
			" */",
			"${name}${op::} ${default:null}${1:,}"
		],
		"description": "Property definition"
	},
	"pp": {
		"prefix": "pp",
		"body": [
			"${property}: ${default:null}${1:,}"
		],
		"description": "Object property"
	},
	"sp": {
		"prefix": "sp",
		"body": [
			"${property}: ${1}${property} ${2:,}"
		],
		"description": "Same property and value"
	},
	"gp": {
		"prefix": "gp",
		"body": [
			"${property}${op::} ${model:model}.${method:get}('${dataIndex}')${1:,}"
		],
		"description": "Object property "
	},
	"bp": {
		"prefix": "bp",
		"body": [
			"${property}: '{${value}}'${1:,}"
		],
		"description": "Bind property"
	},
	"bc": {
		"prefix": "bc",
		"body": [
			"${name:bind}:{",
			"  ${property}:'{${value}}'${1:,}",
			"}${2:,}"
		],
		"description": "Bind configuration"
	},
	"ap": {
		"prefix": "ap",
		"body": [
			"${name}${op::} [${1}]${2:,}"
		],
		"description": "Array property"
	},
	"op": {
		"prefix": "op",
		"body": [
			"${name}${op::} {",
			"  ${property}: ${value:''}${1:,}",
			"}${2:,}"
		],
		"description": "Array property"
	},
	"ct": {
		"prefix": "ct",
		"body": [
			"@${1:private} ${2:args}"
		],
		"description": "Context Tag"
	},
	"cd": {
		"prefix": "cd",
		"body": [
			"//<debug>",
			"${1}",
			"console.${2:log}('${3:debug}', ${4:arguments});",
			"//</debug>"
		],
		"description": "console debug block"
	},
	"cc": {
		"prefix": "cc",
		"body": [
			"/**",
			" * ${1}",
			" */"
		],
		"description": "Comment code"
	},
	"uf": {
		"prefix": "uf",
		"body": [
			" /**",
			"  * @${private}",
			"  */",
			"update${Property}: function (new${Property}, old${Property}) {",
			"  ${2}",
			"},${3}"
		],
		"description": "update function property"
	},
	"sg": {
		"prefix": "sg",
		"body": [
			"/**",
			" * @param {${type}} ${name}  `${default}` ${description} ",
			" * @${public}",
			" */",
			"set${prop:Property}${op::} function (${name}) {",
			"  var old${name} = this.${name};",
			"  if (${name} !== old${name}) {",
			"  this.${name} = ${name};",
			" //this.update${prop}(${name}, old${name});",
			"  }",
			"},",
			"/**",
			" * @return {${type}} ${name} `${default}` ${description} ",
			" * @${public}",
			" */",
			"get${prop:Property}${op::} function () {",
			"  var ${name} = this.${name} || ${default};",
			"  ${1}",
			"  return ${name};",
			"},${2}"
		],
		"description": "set and get property"
	},
	"cv": {
		"prefix": "cv",
		"body": [
			"var ${me} = this,",
			"  ${view} = ${me}.getView(),",
			"  ${model} = ${me}.getViewModel(),",
			"  ${refs} = ${me}.getReferences();"
		],
		"description": "Control variables"
	},
	"el": {
		"prefix": "el",
		"body": [
			"${Ext}.log({",
			"  msg: '${message:debug}',",
			"  level: '${type:warn}',",
			"  dump: ${arguments},",
			"  stack: ${false}",
			"});"
		],
		"description": "Ext.log"
	},
	"fp": {
		"prefix": "fp",
		"body": [
			"/**",
			" * ${1:name} ${2:description}",
			" * @${3:private}",
			" */",
			"${1:name}${4::} function (${5}) {",
			"  ${6}",
			"},${7}"
		],
		"description": "Function Property"
	},
	"mp": {
		"prefix": "mp",
		"body": [
			"/**",
			" * @method ${1:name} ${2:description}",
			" * @return {${3:type}} ${4:property} `${5:default}` ${6:description}",
			" * @${7:private}",
			" */",
			" ${1:name}${9::} function (${10}) {",
			"  var ${4:property} = ${5:null};",
			"  ${13}",
			"  return ${4:property};",
			"},${15}"
		],
		"description": "Method Property"
	},
	"ew": {
		"prefix": "ew",
		"body": [
			"Ext.${widget}('${xtype}'${1:,{${0}}});"
		],
		"description": "Ext Widget"
	},
	"cf": {
		"prefix": "cf",
		"body": [
			"${function}(${1});"
		],
		"description": "call function"
	},
	"aop": {
		"prefix": "aop",
		"body": [
			"${object}[${2:'${3:property}'}];"
		],
		"description": "Access object property"
	}
}